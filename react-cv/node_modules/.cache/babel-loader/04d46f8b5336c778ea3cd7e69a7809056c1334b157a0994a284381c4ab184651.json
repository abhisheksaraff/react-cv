{"ast":null,"code":"import _toConsumableArray from\"/Users/coder/Documents/The Odin Project/repos/react-cv/react-cv/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"/Users/coder/Documents/The Odin Project/repos/react-cv/react-cv/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/coder/Documents/The Odin Project/repos/react-cv/react-cv/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/coder/Documents/The Odin Project/repos/react-cv/react-cv/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/coder/Documents/The Odin Project/repos/react-cv/react-cv/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from\"react\";import uniqid from\"uniqid\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Experience=/*#__PURE__*/function(_Component){_inherits(Experience,_Component);var _super=_createSuper(Experience);function Experience(props){var _this;_classCallCheck(this,Experience);_this=_super.call(this,props);_this.state={responsibilities:[{id:uniqid(),responsibility:\"\"}]};_this.addResponsibilities=function(){_this.setState({responsibilities:[].concat(_toConsumableArray(_this.state.responsibilities),[{id:uniqid(),responsibility:\"\"}])});};_this.removeResponsibilities=function(){if(_this.state.responsibilities.length!==1){_this.setState({//returns a new array of responsibilities with everything except for the last element(text field) \nresponsibilities:_this.state.responsibilities.splice(0,_this.state.responsibilities.length-1)});}};_this.onClickEvent=function(e){e.preventDefault();var newResponsibilites=_toConsumableArray(_this.state.responsibilities);newResponsibilites.forEach(function(item){item.responsibility=e.target[item.id].value;});//delete responsiblitlites with no data in them\nnewResponsibilites=newResponsibilites.filter(function(value,index,array){return value.responsibility!==\"\";});var newExperience={id:uniqid(),position:e.target.position.value,company:e.target.company.value,city:e.target.city.value,state:e.target.state.value,startDate:e.target.startDate.value,endDate:e.target.endDate.value,responsibilities:newResponsibilites};_this.props.setExperience(newExperience);console.log(newExperience);e.target.reset();_this.setDefautltState();};_this.setDefautltState=function(){return _this.setState({responsibilities:[{id:uniqid(),responsibility:\"\"}]});};return _this;}_createClass(Experience,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Experience\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.onClickEvent,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Position :\",/*#__PURE__*/_jsx(\"input\",{name:\"position\",type:\"text\"})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Company :\",/*#__PURE__*/_jsx(\"input\",{name:\"company\",type:\"text\"})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"City :\",/*#__PURE__*/_jsx(\"input\",{name:\"city\",type:\"text\"})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"State :\",/*#__PURE__*/_jsx(\"input\",{name:\"state\",type:\"text\"})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Start Date :\",/*#__PURE__*/_jsx(\"input\",{name:\"startDate\",type:\"text\"})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"End Date :\",/*#__PURE__*/_jsx(\"input\",{name:\"endDate\",type:\"text\"})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Resposibilities :\",this.state.responsibilities.map(function(responsibility){/* returns an input field with a uniqid as it's name that can be used to acces it on Add button click (onClickEvent) */return/*#__PURE__*/_jsx(\"input\",{name:responsibility.id,type:\"text\"},responsibility.id);})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:this.removeResponsibilities,children:\"-\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:this.addResponsibilities,children:\"+\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add\"})})]})]});}}]);return Experience;}(Component);export default Experience;","map":{"version":3,"names":["React","Component","uniqid","jsx","_jsx","jsxs","_jsxs","Experience","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","responsibilities","id","responsibility","addResponsibilities","setState","concat","_toConsumableArray","removeResponsibilities","length","splice","onClickEvent","e","preventDefault","newResponsibilites","forEach","item","target","value","filter","index","array","newExperience","position","company","city","startDate","endDate","setExperience","console","log","reset","setDefautltState","_createClass","key","render","children","onSubmit","name","type","map","onClick"],"sources":["/Users/coder/Documents/The Odin Project/repos/react-cv/react-cv/src/components/input/Experience.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport uniqid from \"uniqid\";\n\nclass Experience extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { responsibilities: [{ id: uniqid(), responsibility: \"\" }] };\n\n    this.addResponsibilities = () => {\n      this.setState({\n        responsibilities: [\n          ...this.state.responsibilities,\n          { id: uniqid(), responsibility: \"\" },\n        ],\n      });\n    };\n\n    this.removeResponsibilities = () => {\n      if (this.state.responsibilities.length !== 1) {\n        this.setState({\n          //returns a new array of responsibilities with everything except for the last element(text field) \n          responsibilities: this.state.responsibilities.splice(0, this.state.responsibilities.length-1),\n        });\n      }\n    };\n\n    this.onClickEvent = (e) => {\n      e.preventDefault();\n\n      let newResponsibilites = [...this.state.responsibilities];\n      newResponsibilites.forEach((item) => {\n        item.responsibility = e.target[item.id].value;\n      });\n\n      //delete responsiblitlites with no data in them\n      newResponsibilites = newResponsibilites.filter(\n        (value, index, array) => value.responsibility !== \"\"\n      );\n\n      let newExperience = {\n        id: uniqid(),\n        position: e.target.position.value,\n        company: e.target.company.value,\n        city: e.target.city.value,\n        state: e.target.state.value,\n        startDate: e.target.startDate.value,\n        endDate: e.target.endDate.value,\n        responsibilities: newResponsibilites,\n      };\n      this.props.setExperience(newExperience);\n\n      console.log(newExperience)\n\n      e.target.reset();\n      this.setDefautltState();\n    };\n\n    this.setDefautltState = () =>\n      this.setState({\n        responsibilities: [{ id: uniqid(), responsibility: \"\" }],\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>Experience</h4>\n        <form onSubmit={this.onClickEvent}>\n          <label>\n            Position :\n            <input name=\"position\" type=\"text\" />\n          </label>\n          <label>\n            Company :\n            <input name=\"company\" type=\"text\" />\n          </label>\n          <label>\n            City :\n            <input name=\"city\" type=\"text\" />\n          </label>\n          <label>\n            State :\n            <input name=\"state\" type=\"text\" />\n          </label>\n          <label>\n            Start Date :\n            <input name=\"startDate\" type=\"text\" />\n          </label>\n          <label>\n            End Date :\n            <input name=\"endDate\" type=\"text\" />\n          </label>\n          <label>\n            Resposibilities :\n            {this.state.responsibilities.map((responsibility) => {\n              /* returns an input field with a uniqid as it's name that can be used to acces it on Add button click (onClickEvent) */\n              return (\n                <input\n                  key={responsibility.id}\n                  name={responsibility.id}\n                  type=\"text\"\n                />\n              );\n            })}\n          </label>\n          <button type=\"button\" onClick={this.removeResponsibilities}>\n            -\n          </button>\n          <button type=\"button\" onClick={this.addResponsibilities}>\n            +\n          </button>\n          <div>\n            <button type=\"submit\">Add</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Experience;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}